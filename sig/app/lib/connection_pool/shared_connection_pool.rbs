# TypeProf 0.21.7

# Classes
class ConnectionPool
  @size: Integer

  class SharedTimedStack
    @create_block: nil
    @max: Integer
    @created: Integer
    @queue: Array[untyped]
    @tagged_queue: Hash[untyped, untyped]
    @mutex: Thread::Mutex
    @resource: Thread::ConditionVariable

    def initialize: (?Integer max) -> void
    def push: (untyped connection) -> Thread::ConditionVariable
    alias << push
    def pop: (untyped preferred_tag, ?Float timeout) -> untyped
    def empty?: -> bool
    def size: -> Integer
    def flush: -> Array[untyped]

    private
    def try_create: (untyped preferred_tag) -> nil
    def fetch_preferred_connection: (untyped preferred_tag) -> untyped
    def current_time: -> Float
    def store_connection: (untyped connection) -> Array[untyped]
  end

  class SharedConnectionPool < ConnectionPool
    @available: SharedTimedStack | TimedStack

    def initialize: (?Hash[untyped, untyped] options) -> void
    def with: (untyped preferred_tag, ?Hash[untyped, untyped] options) -> untyped
    def checkout: (untyped preferred_tag, ?Hash[untyped, untyped] options) -> untyped
    def checkin: (untyped preferred_tag) -> nil

    private
    def key: (untyped tag) -> Symbol
    def key_count: (untyped tag) -> Symbol
  end
end
