name: E2E test for Creatodon Feature's

on:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:

env:
  BUNDLE_CLEAN: true
  BUNDLE_FROZEN: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        mode:
          - production
          - development
    env:
      RAILS_ENV: ${{ matrix.mode }}
      BUNDLE_WITH: ${{ matrix.mode }}
      OTP_SECRET: precompile_placeholder
      SECRET_KEY_BASE: precompile_placeholder

    steps:
      - uses: actions/checkout@v3

      - name: Update Twitter theme submodules
        run: git submodule update  --init

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version-file: '.nvmrc'

      - name: Install native Ruby dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libicu-dev libidn11-dev

      - name: Set up bundler cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - run: yarn --frozen-lockfile --production
      - name: Precompile assets
        # Previously had set this, but it's not supported
        # export NODE_OPTIONS=--openssl-legacy-provider
        run: |-
          NODE_OPTIONS=--openssl-legacy-provider ./bin/rails assets:precompile

      - uses: actions/upload-artifact@v3
        if: matrix.mode == 'development'
        with:
          path: |-
            ./public/assets
            ./public/packs
          name: ${{ github.sha }}
          retention-days: 0

  test:
    runs-on: ubuntu-latest

    needs:
      - build

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASS: postgres
      DISABLE_SIMPLECOV: true
      RAILS_ENV: development
      ALLOW_NOPAM: true
      PAM_ENABLED: true
      PAM_DEFAULT_SERVICE: pam_test
      PAM_CONTROLLED_SERVICE: pam_test_controlled
      BUNDLE_WITH: 'pam_authentication test'
      CI_JOBS: ${{ matrix.ci_job }}/4
      E2E: true

    strategy:
      fail-fast: false
      matrix:
        ruby-version:
          - '3.0'
          - '3.1'
          - '.ruby-version'
        ci_job:
          - 1
          - 2
          - 3
          - 4
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: './public'
          name: ${{ github.sha }}

      - name: Update Twitter theme submodules
        run: git submodule update  --init

      - name: Update package index
        run: sudo apt-get update

      - name: Install native Ruby dependencies
        run: sudo apt-get install -y libicu-dev libidn11-dev

      - name: Install additional system dependencies
        run: sudo apt-get install -y ffmpeg imagemagick libpam-dev

      - name: Set up bundler cache
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version}}
          bundler-cache: true

      - name: Load database schema
        run: './bin/rails db:create db:schema:load db:seed'

      - name: Cypress run with env
        uses: cypress-io/github-action@v5
        env:
          CYPRESS_email: gamelinks007@gmail.com
          CYPRESS_password: Jhon117
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          start: |
            bundle exec foreman start -f Procfile.dev
          wait-on: 'http://localhost:3000'
          record: false
          wait-on-timeout: 300
          command: yarn run cypress run --config-file cypress.config.ts
